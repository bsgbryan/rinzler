// Generated by CoffeeScript 1.8.0
(function() {
  var calls, listeners, microtime, threshold, waits;

  microtime = require('microtime');

  threshold = 30;

  listeners = [];

  calls = {};

  waits = {};

  setInterval(function() {
    return Object.keys(calls).forEach(function(id) {
      return listeners.forEach(function(listener) {
        if (++waits[id] > threshold) {
          return listener.warn(id, waits[id]);
        }
      });
    });
  }, 1000);

  module.exports = {
    threshold: function(limit) {
      return threshold = limit;
    },
    listener: function(fn) {
      return listeners.push(fn);
    },
    start: function(id) {
      calls[id] = microtime.nowDouble();
      return waits[id] = 0;
    },
    stop: function(id) {
      var diff;
      diff = microtime.nowDouble() - calls[id];
      delete calls[id];
      delete waits[id];
      return listeners.forEach(function(listener) {
        return listener.notify(id, diff);
      });
    }
  };

}).call(this);
